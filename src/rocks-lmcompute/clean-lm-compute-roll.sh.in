#!/bin/bash

# This script removes :
#    roll-installed RPMs, 
#    created directories
#    group lmwriter

RM="rpm -evl --quiet --nodeps"
PYBIN=/opt/python/bin/python3.6
PIP3=/opt/python/bin/pip3.6
ROCKS_CMD=/opt/rocks/bin/rocks
LMUSER_COUNT=`/bin/egrep -i "^lmwriter" /etc/passwd | wc -l`
LMROLL_COUNT=`$ROCKS_CMD list roll | grep lifemapper | wc -l`
LMLAB_ROLL_COUNT=`$ROCKS_CMD list roll | grep lifemapper-lab |  wc -l`
LMSERVER_ROLL_COUNT=`$ROCKS_CMD list roll | grep lifemapper-server |  wc -l`

TimeStamp () {
    echo $1 `/bin/date` >> $LOG
}

set_defaults() {
    LOG=/tmp/`/bin/basename $0`.log
    rm -f $LOG
    touch $LOG
    
    echo "-- enable modules"  | tee -a $LOG
    source /usr/share/Modules/init/bash
}


del-lifemapper-shared() {
    if [[ $LMROLL_COUNT <= 1 ]] ; then
        echo "Removing lifemapper RPMs shared" >> $LOG
        # for requests on all lm rolls
        $RM opt-lifemapper-certifi
        $RM opt-lifemapper-chardet
        $RM opt-lifemapper-idna
        $RM opt-lifemapper-requests
        $RM opt-lifemapper-wheel
        $RM opt-lifemapper-urllib3
    
        module load opt-python
        $PYBIN@ -m pip uninstall -y wheel
        $PYBIN@ -m pip uninstall -y urllib3
        module unload opt-python
    fi 

    if [[ $LMLAB_ROLL_COUNT = 0 ]] ; then
        echo "Removing lmcompute/lmlab RPMs shared" >> $LOG
        # java deps
        $RM copy-jdk-configs
        $RM java-1.8.0-openjdk-headless
        $RM javapackages-tools
        $RM lksctp-tools
        $RM pcsc-lite-libs
        $RM python-lxml
        $RM python-javapackages
        $RM tzdata-java
    fi

    if [[ $LMSERVER_ROLL_COUNT = 0 ]] ; then
        echo "Removing lmcompute/lmserver RPMs shared" >> $LOG
        # gdal-libs + deps
        $RM gdal-libs
        $RM CharLS 
        $RM SuperLU 
        $RM armadillo
        $RM arpack
        $RM atlas atlas-devel
        $RM blas  blas-devel
        $RM cfitsio 
        $RM freexl 
        $RM geos geos-devel
        $RM hdf5 hdf5-devel
        $RM lapack lapack-devel
        $RM libaec libaec-devel
        $RM libdap 
        $RM libgeotiff libgeotiff-devel
        $RM libgta
        $RM libtiff-devel
        $RM netcdf 
        $RM ogdi 
        $RM openblas-openmp 
        $RM openjpeg2 
        $RM postgresql-libs
        $RM proj 
        $RM unixODBC 
        $RM xerces-c 
        # gdal deps
        $RM gpsbabel
        $RM libusb
        $RM shapelib
        
        echo "Removing lmcompute/lmserver shared lifemapper-* and opt-lifemapper-* RPMS" >> $LOG	
        $RM opt-lifemapper-biotaphypy
        $RM     lifemapper-cctools
        $RM opt-lifemapper-cython
        $RM opt-lifemapper-dendropy
        $RM     lifemapper-env-data
        $RM opt-lifemapper-gdal
        $RM opt-lifemapper-lmpy
        $RM opt-lifemapper-numpy
        $RM opt-lifemapper-matplotlib
        $RM     lifemapper-proj
        $RM opt-lifemapper-scipy
        $RM     lifemapper-tiff
        
        echo "Removing lmcompute/lmserver shared python wheels from opt-lifemapper-* RPMs" >> $LOG
        module load opt-python
        $PYBIN@ -m pip uninstall -y python-dateutil
        $PYBIN@ -m pip uninstall -y pyparsing
        $PYBIN@ -m pip uninstall -y kiwisolver
        $PYBIN@ -m pip uninstall -y cycler
        $PYBIN@ -m pip uninstall -y numpy
        $PYBIN@ -m pip uninstall -y scipy
        $PYBIN@ -m pip uninstall -y matplotlib
        module unload opt-python
    fi
}

del-shared-directories() {
   echo "Removing lifemapper installation directory" >> $LOG
   rm -rf @LMHOME@
   echo "Removing shared lifemapper temp and data directories" >> $LOG
   rm -rf @LMSCRATCHDISK@
   rm -rf @LMDISK@
   echo "Removing shared lifemapper PID directory" >> $LOG
   rm -rf /var/run/lifemapper
}

del-shared-user-group () {
    echo "Remove lmwriter user/group/dirs" >> $LOG
    userdel lmwriter
    groupdel lmwriter
    /bin/rm -f /var/spool/mail/lmwriter
    /bin/rm -rf /export/home/lmwriter
    echo "Syncing users info" >> $LOG
    $ROCKS_CMD sync users
}

del-lifemapper() {
   echo "Removing lifemapper prerequisite RPMS" >> $LOG
   $RM gsl gsl-devel
   $RM libopenmodeller libopenmodeller-devel

   echo "Removing lifemapper-*, opt-lifemapper-* RPMS" >> $LOG
   $RM lifemapper-lmcompute
   $RM rocks-lmcompute
   $RM roll-lifemapper-usersguide
   $RM roll-lifemapper-compute-kickstart
}

del-node-directories () {
   echo "Removing node code, data and PID directories" >> $LOG
   $ROCKS_CMD run host compute "rm -rf @LMHOME@"
   $ROCKS_CMD run host compute "rm -rf /state/partition1/lm"
   $ROCKS_CMD run host compute "rm -rf /state/partition1/lmscratch"
   $ROCKS_CMD run host compute "rm -rf /var/run/lifemapper"
}

# remove obsolete Lifemapper cron jobs
del-cron-jobs () {
    # only on frontend
    name1=`hostname`
    name2=`$ROCKS_CMD list host attr localhost | grep Kickstart_PublicHostname | awk '{print $3}'`
    if [ "$name1" == "$name2" ] ; then
        echo "Remove old cron jobs in /etc/cron.daily and /etc/cron.monthly on frontend ..." >> $LOG
        rm -vf  /etc/cron.hourly/lmcompute_*
        rm -vf  /etc/cron.daily/lmcompute_*
        rm -vf  /etc/cron.monthly/lmcompute_*
    fi
}


del-automount-entry () {
    cat /etc/auto.share  | grep -v "^lm " > /tmp/auto.share.nolmcompute
    /bin/cp /tmp/auto.share.nolmcompute /etc/auto.share
}

del-roll () {
    echo
    echo "Removing roll lifemapper-compute" >> $LOG
    $ROCKS_CMD remove roll lifemapper-compute
    echo "Rebuilding the distro" >> $LOG
    module unload opt-python
    (cd /export/rocks/install; $ROCKS_CMD create distro; yum clean all)
    echo
}

check_lm_processes () {
    LMUSER_PROCESSES=`ps -Alf | grep lmwriter | grep -v grep | wc -l`
    if [ $LMUSER_PROCESSES -ne 0 ]; then
        echo "Stop all lmwriter processes before running this script"
        exit 0
    fi 
}

### main ###

check_lm_processes

set_defaults
TimeStamp "# Start"

del-lifemapper
del-node-directories
del-cron-jobs
del-automount-entry

if [ $LMROLL_COUNT = 1 ]; then
    echo "Removing the last lifemapper roll"  >> $LOG
else
	del-lifemapper-shared
	del-shared-directories
	del-shared-user-group
fi

del-roll

TimeStamp "# End"
