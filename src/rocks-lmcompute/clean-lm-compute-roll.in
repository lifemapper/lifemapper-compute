#!/bin/bash

# This script removes :
#    roll-installed RPMs, 
#    created directories
#    group lmwriter

RM="rpm -evl --quiet --nodeps"
PYBIN=@PYTHON36@
ROCKS_CMD=/opt/rocks/bin/rocks
LMUSER_COUNT=`/bin/egrep -i "^lmwriter" /etc/passwd | wc -l`
LMROLL_COUNT=`$ROCKS_CMD list roll | grep lifemapper | wc -l`
\
TimeStamp () {
    echo $1 `/bin/date` >> $LOG
}


set_defaults() {
    LOG=/tmp/`/bin/basename $0`.log
    rm -f $LOG
    touch $LOG
    
    echo "-- enable modules"  | tee -a $LOG
    source /usr/share/Modules/init/bash
}


delete_python_dependencies () {
    DEPENDENCIES=("$@")
    module load opt-python
    echo "Uninstall shared python dependencies " $DEPENDENCIES
    for d in $DEPENDENCIES
        do
            $PY3 -m pip uninstall -y $d
        done    
    module unload opt-python
}


del-lifemapper-shared() {
    echo "Removing shared python wheels" >> $LOG
    $BIN/define_python_dependencies
    delete_python_dependencies  "${BASE_DEPS[@]}"
    delete_python_dependencies "${REQUESTS_DEPS[@]}"
    delete_python_dependencies "${MATPLOTLIB_DEPS[@]}"
    delete_python_dependencies "${PYTESTCOV_DEPS[@]}"
    delete_python_dependencies "${LMPY_DEPS[@]}"
    delete_python_dependencies "${LMTEST_DEPS[@]}"
    delete_python_dependencies "${OTHER_DEPS[@]}"

    echo "Removing shared lifemapper-* and opt-lifemapper-* RPMS" >> $LOG    
    $RM opt-lifemapper-requests
    $RM opt-lifemapper-matplotlib
    $RM opt-lifemapper-pytest-cov
    $RM opt-lifemapper-pydeps
    $RM opt-lifemapper-lmpy
    $RM opt-lifemapper-lmtest
    # OTHER_DEPS
    $RM opt-lifemapper-biotaphypy
    $RM opt-lifemapper-cython

    $RM     lifemapper-cctools
    $RM     lifemapper-env-data
    $RM     lifemapper-proj
    $RM     lifemapper-tiff

    echo "Removing shared standard RPMS" >> $LOG    
    # gdal-libs + deps
    $RM gdal-libs
    $RM CharLS 
    $RM SuperLU 
    $RM armadillo
    $RM arpack
    $RM atlas atlas-devel
    $RM blas  blas-devel
    $RM cfitsio 
    $RM freexl 
    $RM geos geos-devel
    $RM hdf5 hdf5-devel
    $RM lapack lapack-devel
    $RM libaec libaec-devel
    $RM libdap 
    $RM libgeotiff libgeotiff-devel
    $RM libgta
    $RM libtiff-devel
    $RM netcdf 
    $RM ogdi 
    $RM openblas-openmp 
    $RM openjpeg2 
    $RM postgresql-libs
    $RM proj 
    $RM unixODBC 
    $RM xerces-c 
    # gdal deps
    $RM gpsbabel
    $RM libusb
    $RM shapelib    
}


del-shared-directories() {
   echo "Removing lifemapper installation directory" >> $LOG
   rm -rf @LMHOME@
   echo "Removing shared lifemapper temp and data directories" >> $LOG
   rm -rf @LMSCRATCHDISK@
   rm -rf @LMDISK@
   echo "Removing shared lifemapper PID directory" >> $LOG
   rm -rf /var/run/lifemapper
}


del-shared-user-group () {
    echo "Remove lmwriter user/group/dirs" >> $LOG
    userdel lmwriter
    groupdel lmwriter
    /bin/rm -f /var/spool/mail/lmwriter
    /bin/rm -rf /export/home/lmwriter
    echo "Syncing users info" >> $LOG
    $ROCKS_CMD sync users
}


del-lifemapper() {
   echo "Removing lifemapper prerequisite RPMS" >> $LOG
   $RM gsl gsl-devel
   $RM libopenmodeller libopenmodeller-devel

   echo "Removing lifemapper-*, opt-lifemapper-* RPMS" >> $LOG
   $RM lifemapper-lmcompute
   $RM rocks-lmcompute
   $RM roll-lifemapper-usersguide
   $RM roll-lifemapper-compute-kickstart
}


del-node-directories () {
   echo "Removing node code, data and PID directories" >> $LOG
   $ROCKS_CMD run host compute "rm -rf @LMHOME@"
   $ROCKS_CMD run host compute "rm -rf /state/partition1/lm"
   $ROCKS_CMD run host compute "rm -rf /state/partition1/lmscratch"
   $ROCKS_CMD run host compute "rm -rf /var/run/lifemapper"
}


del-cron-jobs () {
    # only on frontend
    name1=`hostname`
    name2=`$ROCKS_CMD list host attr localhost | grep Kickstart_PublicHostname | awk '{print $3}'`
    if [ "$name1" == "$name2" ] ; then
        echo "Remove old cron jobs in /etc/cron.daily and /etc/cron.monthly on frontend ..." >> $LOG
        rm -vf  /etc/cron.hourly/lmcompute_*
        rm -vf  /etc/cron.daily/lmcompute_*
        rm -vf  /etc/cron.monthly/lmcompute_*
    fi
}


del-automount-entry () {
    cat /etc/auto.share  | grep -v "^lm " > /tmp/auto.share.nolmcompute
    /bin/cp /tmp/auto.share.nolmcompute /etc/auto.share
}


del-roll () {
    echo
    echo "Removing roll lifemapper-compute" >> $LOG
    $ROCKS_CMD remove roll lifemapper-compute
    echo "Rebuilding the distro" >> $LOG
    module unload opt-python
    (cd /export/rocks/install; $ROCKS_CMD create distro; yum clean all)
    echo
}


check_lm_processes () {
    LMUSER_PROCESSES=`ps -Alf | grep lmwriter | grep -v grep | wc -l`
    if [ $LMUSER_PROCESSES -ne 0 ]; then
        echo "Stop all lmwriter processes before running this script"
        exit 0
    fi 
}


### main ###
check_lm_processes

set_defaults
TimeStamp "# Start"

del-lifemapper
del-node-directories
del-cron-jobs
del-automount-entry

if [ $LMROLL_COUNT = 1 ]; then
    echo "Removing the last lifemapper roll"  >> $LOG
	del-lifemapper-shared
	del-shared-directories
	del-shared-user-group
fi

del-roll

TimeStamp "# End"
