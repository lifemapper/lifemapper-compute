<?xml version="1.0" standalone="no"?>

<kickstart>


	<description>
	Lifemapper roll (lmcompute)
	Install on the frontend of the lmcompute cluster. 
	</description>

	<copyright>
	Copyright (c) 2000 - 2012 The Regents of the University of California.
	All rights reserved. Rocks(r) v5.5/v6.0 www.rocksclusters.org
	
	</copyright>

	<changelog>
	$Log$
	</changelog>

	<package>roll-lifemapper-usersguide</package>
	<package>screen</package>

<post>

GID=`grep lmwriter: /etc/group`
if [ "$GID" == "" ] ; then
    /usr/sbin/groupadd lmwriter
fi

mkdir -p /state/partition1/lm
mkdir -p /state/partition1/lm/jobs
mkdir -p /state/partition1/lm/metrics
mkdir -p /state/partition1/lm/temp
mkdir -p /state/partition1/lm/logs
mkdir -p /state/partition1/lm/data/layers
mkdir -p /state/partition1/lm/test

mkdir -p /state/partition1/lm/jobRequests
mkdir -p /state/partition1/lm/holdJobs
mkdir -p /state/partition1/lm/pushJobs

/bin/cp -p -r /opt/lifemapper/LmCompute/test/* /state/partition1/lm/test
chgrp -R lmwriter /state/partition1/lm
chmod -R g+ws /state/partition1/lm

# these commands do the same changes as lifemapper-server roll
# need if both rolls are on the same server
/bin/chgrp lmwriter /opt/lifemapper
/bin/chmod g+ws /opt/lifemapper

for item in "config" "Lm*" "__init__.py*" ; do
    /bin/chgrp -R lmwriter /opt/lifemapper/$item
    /bin/chmod -R g+ws /opt/lifemapper/$item
done

<file name="/etc/auto.share" mode="append">
lm &Kickstart_PrivateHostname;:/export/&amp;
</file>

/etc/init.d/autofs restart
/opt/rocks/bin/rocks sync users
/opt/rocks/bin/rocks run host compute "service autofs restart"

</post>

</kickstart>
