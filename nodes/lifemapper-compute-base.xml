<?xml version="1.0" standalone="no"?>

<kickstart>


	<description>
	Lifemapper-compute roll 
	Install on the frontend and compute nodes of the lmcompute cluster	
	</description>

	<copyright>
	Copyright (c) 2000 - 2012 The Regents of the University of California.
	All rights reserved. Rocks(r) v5.5/v6.0 www.rocksclusters.org
	
	</copyright>

	<changelog>
	$Log$
	</changelog>

    <!-- java for nodes -->
    <package>libxslt</package>
    <package>python-lxml</package>
    <package>python-javapackages</package>
    <package>javapackages-tools</package>
    <package>lksctp-tools</package>
    <package>pcsc-lite-libs</package>
    <package>tzdata-java</package>
    <package>copy-jdk-configs</package>
    <package>java-1.8.0-openjdk-headless</package>
    
    <package>python2-subprocess32</package>

	<!-- gdal prerequisites -->
	<package>libaec</package>
	<package>libaec-devel</package>
	<package>hdf5</package>
	<package>hdf5-devel</package>
    <package>libgeotiff</package>
    <package>libgeotiff-devel</package>
    <package>libtiff-devel</package>
    <package>geos</package>
    <package>geos-devel</package>
	<!-- scipy prerequisites -->
	<package>blas</package>
	<package>blas-devel</package>
	<package>atlas</package>
	<package>atlas-devel</package>
	<package>lapack</package>
	<package>lapack-devel</package>
	<!-- openmodeller prerequisites -->
	<package>gsl</package>
	<package>gsl-devel</package>
    <package>libopenmodeller</package>
    <package>libopenmodeller-devel</package>

	<!-- lifemapper dependencies built from source -->
	<package>lifemapper-cctools</package>
	<package>lifemapper-lmcompute</package>
	<!-- <package>lifemapper-openmodeller</package> -->
	<package>lifemapper-proj</package>
	<package>rocks-lmcompute</package>

	<!-- python prerequisites -->
    <package>opt-lifemapper-matplotlib</package>
    <package>opt-lifemapper-biotaphypy</package>
	<package>opt-lifemapper-cython</package>
	<package>opt-lifemapper-dendropy</package>
    <package>opt-lifemapper-gdal</package>
    <package>opt-lifemapper-lmpy</package>
    <package>opt-lifemapper-numpy</package>
    <package>opt-lifemapper-scipy</package>
	<!-- # for requests -->
	<!-- <package>python-ipaddress</package> -->
	<package>opt-lifemapper-certifi</package>
	<package>opt-lifemapper-chardet</package>
	<package>opt-lifemapper-idna</package>
	<package>opt-lifemapper-urllib3</package>
	<package>opt-lifemapper-requests</package>

<post>

/sbin/ldconfig

# Sync users on Frontend
HN=`eval hostname`
isFE=`rocks list host $HN | grep Frontend | wc -l`
if [ $isFE = 1 ]; then
    echo "Executing lifemapper-compute-base on FE" | tee -a $LOG
    /opt/rocks/bin/rocks sync users
else  
    echo "Executing lifemapper-compute-base on node" | tee -a $LOG
fi    

# Node directory NOT shared from frontend
/bin/mkdir -p /state/partition1/lmscratch/.java/.systemPrefs
/bin/mkdir -p /state/partition1/lmscratch/.java/.userPrefs
/bin/mkdir -p /state/partition1/lmscratch/job
/bin/mkdir -p /state/partition1/lmscratch/log
/bin/mkdir -p /state/partition1/lmscratch/temp
/bin/mkdir -p /state/partition1/lmscratch/test
/bin/mkdir -p /state/partition1/lmscratch/worker
/bin/chgrp -R lmwriter /state/partition1/lmscratch
/bin/chmod -R g+ws     /state/partition1/lmscratch

<file name="/etc/rc.d/rocksconfig.d/post-99-lifemapper-lmcompute" perms="0700">
#!/bin/bash
# do LM initialization

/sbin/ldconfig
/opt/lifemapper/rocks/bin/initLMcompute
rm -rf /etc/rc.d/rocksconfig.d/post-99-lifemapper-lmcompute

</file>

</post>

</kickstart>
